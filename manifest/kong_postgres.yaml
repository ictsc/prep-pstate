apiVersion: v1
kind: Service
metadata:
  name: kong-proxy
spec:
  type: NodePort
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: kong

---
apiVersion: v1
kind: Service
metadata:
  name: kong-proxy-ssl
spec:
  type: NodePort
  ports:
  - name: kong-proxy-ssl
    port: 443
    targetPort: 443
    protocol: TCP
  selector:
    app: kong

---
apiVersion: v1
kind: Service
metadata:
  name: kong-admin
spec:
  type: ClusterIP
  ports:
  - name: kong-admin
    port: 8001
    targetPort: 8001
    protocol: TCP
  selector:
    app: kong

---
apiVersion: v1
kind: Service
metadata:
  name: kong-admin-ssl
spec:
  type: ClusterIP
  ports:
  - name: kong-admin-ssl
    port: 8444
    targetPort: 8444
    protocol: TCP
  selector:
    app: kong

---
apiVersion: v1
kind: Pod
metadata:
  name: kong-pod
  labels:
    app: kong
spec:
#  hostNetwork: true
  volumes:
    - name: kong-pv-storage
      persistentVolumeClaim:
        claimName: kong-pv-claim
  containers:
  - name: kong
    image: kong
    env:
      - name: KONG_ADMIN_LISTEN
        value: "0.0.0.0:80, 0.0.0.0:443 ssl"
      - name: KONG_ADMIN_LISTEN
        value: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
      - name: KONG_PG_PASSWORD
        value: kong
      - name: KONG_PG_HOST
        value: postgres
      - name: KONG_PROXY_ACCESS_LOG
        value: "/dev/stdout"
      - name: KONG_ADMIN_ACCESS_LOG
        value: "/dev/stdout"
      - name: KONG_PROXY_ERROR_LOG
        value: "/dev/stderr"
      - name: KONG_ADMIN_ERROR_LOG
        value: "/dev/stderr"
    ports:
    - name: admin
      containerPort: 8001
      protocol: TCP
    - name: proxy
      containerPort: 80
      protocol: TCP
      hostPort: 80
    - name: proxy-ssl
      containerPort: 443
      protocol: TCP
      hostPort: 443
    - name: admin-ssl
      containerPort: 8444
      protocol: TCP
    volumeMounts:
      - mountPath: "/etc/kong"
        name: kong-pv-storage

